<map version="1.0.1"><node CREATED="1648602502325" ID="ID_root" MODIFIED="1648602502325" TEXT="Mybatis源码"><node CREATED="1648602502325" ID="ID_1596a6a4d738" POSITION="right" MODIFIED="1648602502325" TEXT="显式调用"><node CREATED="1648602502325" ID="ID_ca6efbf5e8a8" MODIFIED="1648602502325" TEXT="加载配置文件，&amp;lt;br&amp;gt;加载配置文件返回Reader对象(字符流)"><node CREATED="1648602502325" ID="ID_9aeba5a56e06" MODIFIED="1648602502325" TEXT="Resources.getResourceAsReader(&amp;quot;mybatis.xml&amp;quot;);&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_8170bc690ffc" MODIFIED="1648602502325" TEXT="若不指定Resources的charset属性&amp;lt;br&amp;gt;则默认使用系统编码"></node><node CREATED="1648602502325" ID="ID_fe1ab952be0a" MODIFIED="1648602502325" TEXT="Resources内部封装一个包含&amp;lt;br&amp;gt;五个类加载器的数组ClassLoaderWrapper&amp;lt;br&amp;gt;1、classLoader--自定义类加载器&amp;lt;br&amp;gt;2、defaultClassLoader--默认类加载器&amp;lt;br&amp;gt;3、Thread.currentThread().getContextClassLoader()---线程上下文类加载器&amp;lt;br&amp;gt;4、getClass().getClassLoader()---加载当前类的类加载器&amp;lt;br&amp;gt;5、systemClassLoader---系统类加载器&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_6caa5e269a57" MODIFIED="1648602502325" TEXT="遍历classLoaderWrapper中的类加载器&amp;lt;br&amp;gt;通过类加载器加载&amp;quot;mybatis.xml&amp;quot;,返回InputStream&amp;lt;br&amp;gt;底层调用URL&amp;nbsp;url&amp;nbsp;=&amp;nbsp;getResource(name);&amp;lt;br&amp;gt;涉及到双亲委派机制"></node><node CREATED="1648602502325" ID="ID_38e3c59a8542" MODIFIED="1648602502325" TEXT="加载过程中，由于有的类加载器需要资源前带有&amp;quot;/&amp;quot;&amp;lt;br&amp;gt;因此&amp;quot;mybatis.xml&amp;quot;加载次数最少为1最大为10"></node></node></node><node CREATED="1648602502325" ID="ID_c3e114a3d2c9" MODIFIED="1648602502325" TEXT="构造SqlSessionFactory&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_48f371fe4403" MODIFIED="1648602502325" TEXT="new&amp;nbsp;SqlSessionFactoryBuilder().build(reader)&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_62034a6bf823" MODIFIED="1648602502325" TEXT="通过被加载的Reader构造一个SqlSessionFactory实例"></node><node CREATED="1648602502325" ID="ID_82256cdbbe28" MODIFIED="1648602502325" TEXT="Reader使用xml规则解析，解析后的数据装载到XPathParser中&amp;lt;br&amp;gt;的一个Document属性document&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_99602eaf203f" MODIFIED="1648602502325" TEXT="Reader解析期间，mybatis离线实体解析器(各种dtd文件装载而来)&amp;lt;br&amp;gt;被装载到XPathParser中&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_fedd7189d511" MODIFIED="1648602502325" TEXT="包含离线实体解析器和Reader数据的XPathParser对象&amp;lt;br&amp;gt;被装载到XMLConfigBuilder --- xml配置构造器&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_3e47b1daafaa" MODIFIED="1648602502325" TEXT="构造好的xml配置构造器根据xml中的标签解析数据，构造一个Configuration对象&amp;lt;br&amp;gt;用于存储xml配置中的所有配置信息其中包括数据源信息及其他mybatis配置，且只解析一次！&amp;lt;br&amp;gt;即Configuration实例只会存在一个"></node><node CREATED="1648602502325" ID="ID_ebd4c00530a4" MODIFIED="1648602502325" TEXT="最终根据Configuration实例化一个DefaultSqlSessionFactory返回&amp;lt;br&amp;gt;"></node></node></node><node CREATED="1648602502325" ID="ID_1cb4259d2c7d" MODIFIED="1648602502325" TEXT="生产SqlSession&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_86a6edab2cde" MODIFIED="1648602502325" TEXT="factory.openSession();&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_78895b39b003" MODIFIED="1648602502325" TEXT="通过SqlSessionFactory生产一个会话-SqlSession&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_09ec05b6a3dd" MODIFIED="1648602502325" TEXT="SqlSession有两个实现类&amp;lt;br&amp;gt;1、DefaultSqlSessionFactory&amp;lt;br&amp;gt;2、SqlSessionManager&amp;lt;br&amp;gt;显示调用的情况下使用的是DefaultSqlSessionFactory&amp;lt;br&amp;gt;因此调用DefaultSqlSessionFactory.openSession()生产SqlSession"></node><node CREATED="1648602502325" ID="ID_e54a7b547e2b" MODIFIED="1648602502325" TEXT="通过Configuration指定执行器的级别&amp;lt;br&amp;gt;mybatis中执行器有三个级别：&amp;lt;br&amp;gt;1、SIMPLE&amp;lt;br&amp;gt;2、REUSE&amp;lt;br&amp;gt;3、BATCH&amp;lt;br&amp;gt;如果配置文件中没有指定，默认SIMPLE"></node><node CREATED="1648602502325" ID="ID_1cf7e6f1871a" MODIFIED="1648602502325" TEXT="openSession无参时不指定事务的隔离级别并且关闭自动提交"></node><node CREATED="1648602502325" ID="ID_64d821dc09e4" MODIFIED="1648602502325" TEXT="获取配置文件中的环境配置，&amp;lt;br&amp;gt;即标签&amp;lt;environments&amp;gt;&amp;lt;/environments&amp;gt;&amp;lt;br&amp;gt;中的配置，如果该标签中没有指定事务管理器，那么默认使用ManagedTransactionFactory管理事务&amp;lt;br&amp;gt;否则使用配置的事务管理器，mybaits中有两种事务管理器：&amp;lt;br&amp;gt;1、JdbcTransactionFactory&amp;lt;br&amp;gt;2、ManagedTransactionFactory&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_72ece28e9a32" MODIFIED="1648602502325" TEXT="通过事务管理器ManagedTransactionFactory构造数据库连接器Transaction，&amp;lt;br&amp;gt;用来管理连接的生命周期：&amp;lt;br&amp;gt;创建-&amp;gt;准备-&amp;gt;提交/回滚-&amp;gt;关闭&amp;lt;br&amp;gt;creation,&amp;nbsp;preparation,&amp;nbsp;commit/rollback&amp;nbsp;and&amp;nbsp;close&amp;lt;br&amp;gt;构造的数据库连接器默认关闭自动提交，并且不支持事务，事务由外部控制&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_d1b43f3836e7" MODIFIED="1648602502325" TEXT="事务隔离级别：&amp;lt;br&amp;gt;1、读未提交&amp;lt;br&amp;gt;2、读已提交&amp;lt;br&amp;gt;3、可重复读&amp;lt;br&amp;gt;4、串行化"></node></node><node CREATED="1648602502325" ID="ID_97c3b70e25df" MODIFIED="1648602502325" TEXT="使用构造好的数据库连接器Transaction和指定的执行器级别创建一个Executor&amp;lt;br&amp;gt;根据对应的执行器级别创建对应的执行器&amp;lt;br&amp;gt;BATCH -&amp;gt;&amp;nbsp;BatchExecutor&amp;lt;br&amp;gt;REUSE -&amp;gt;&amp;nbsp;ReuseExecutor&amp;lt;br&amp;gt;SIMPLE -&amp;gt;&amp;nbsp;SimpleExecutor&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_92d3fc58ce46" MODIFIED="1648602502325" TEXT="三种执行器均为BaseExecutor的子类&amp;lt;br&amp;gt;BaseExecutor的实现类：&amp;lt;br&amp;gt;1、BatchExecutor（sql级别）&amp;lt;br&amp;gt;2、ReuseExecutor（sql级别）&amp;lt;br&amp;gt;3、SimpleExecutor（sql级别）&amp;lt;br&amp;gt;4、ClosedExecutor（未连接执行器，返回异常UnsupportedOperationException）&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_3e4c02397675" MODIFIED="1648602502325" TEXT="BaseExecutor实现Executor接口&amp;lt;br&amp;gt;实现Executor接口的类：&amp;lt;br&amp;gt;1、BatchExecutor（sql级别）&amp;lt;br&amp;gt;2、ReuseExecutor（sql级别）&amp;lt;br&amp;gt;3、SimpleExecutor（sql级别）&amp;lt;br&amp;gt;4、ClosedExecutor（未连接）&amp;lt;br&amp;gt;5、BaseExecutor（基类）&amp;lt;br&amp;gt;6、CachingExecutor（缓存+sql）&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_8056488966d3" MODIFIED="1648602502325" TEXT="执行器的内部其实就是对JDBC的封装&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_35d80b158b5c" MODIFIED="1648602502325" TEXT="执行器的设计采用策略模式，基本的执行逻辑都在基类BaseExecutor中定义好&amp;lt;br&amp;gt;其中具体的一些执行逻辑就通过各个策略(执行器)具体执行，策略的选择就是通过配置中&amp;lt;br&amp;gt;defaultExecutorType的值来选择&amp;lt;br&amp;gt;"></node></node><node CREATED="1648602502325" ID="ID_1c1a07b679dd" MODIFIED="1648602502325" TEXT="执行器创建完成后根据配置中cacheEnabled判断&amp;lt;br&amp;gt;是否开启二级缓存，如果开启执行器变为：CachingExecutor&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_9a91076fd3c0" MODIFIED="1648602502325" TEXT="指定好最终的执行器后，使用责任链模式增强执行器处理&amp;lt;br&amp;gt;即，用户可以实现Interceptor接口，自定义执行器，mybatis会&amp;lt;br&amp;gt;轮询责任链上的执行器进行后续的处理 - - - mybatis插件原理"></node></node><node CREATED="1648602502325" ID="ID_0c9748f8855b" MODIFIED="1648602502325" TEXT="通过执行器Executor、配置Configuration、是否自动提交&amp;lt;br&amp;gt;创建DefaultSqlSession实例&amp;nbsp; 返回&amp;lt;br&amp;gt;"></node></node></node><node CREATED="1648602502325" ID="ID_3d385f4c3bae" MODIFIED="1648602502325" TEXT="执行操作，以查询为例&amp;lt;br&amp;gt;"><node CREATED="1648602502325" ID="ID_b42024ac9db2" MODIFIED="1648602502325" TEXT="一、使用SqlSession自带操作方法&amp;lt;br&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sqlSession.selectOne(&amp;quot;com.dwk.Mapper.findById&amp;quot;,1)&amp;lt;br&amp;gt;"></node><node CREATED="1648602502325" ID="ID_2c7c66bc6791" MODIFIED="1648602502325" TEXT="二、通过映射执行&amp;lt;br&amp;gt;Mapper为自定义类，即dao(mapper)&amp;lt;br&amp;gt;&amp;nbsp; &amp;nbsp;Mapper&amp;nbsp;mapper&amp;nbsp;=&amp;nbsp;sqlSession.getMapper(Mapper.class);&amp;lt;br&amp;gt;&amp;nbsp; &amp;nbsp;mapper.findById(&amp;quot;id&amp;quot;);&amp;lt;br&amp;gt;"></node></node></node></node></map>